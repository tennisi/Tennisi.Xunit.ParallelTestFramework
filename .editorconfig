[*.cs]
#Code Style
# Roslynator Configuration
dotnet_analyzer_diagnostic.category-roslynator.severity = warning
roslynator_analyzers.enabled_by_default = true
roslynator_refactorings.enabled = true
roslynator_compiler_diagnostic_fixes.enabled = true
roslynator_enum_flag_value_style = shift_operator

resharper_redundant_empty_object_creation_argument_list_highlighting = suggestion
resharper_conditional_access_qualifier_is_non_nullable_according_to_api_contract_highlighting = suggestion
resharper_unused_variable_highlighting = none
resharper_redundant_using_directive_global_highlighting = suggestion
resharper_arrange_type_member_modifiers_highlighting = none
resharper_unused_member_global_highlighting = none
resharper_virtual_member_call_in_constructor_highlighting = none
resharper_unused_member_local_highlighting = none

resharper_blank_lines_after_file_scoped_namespace_directive = 1
resharper_blank_lines_after_imports = 1

dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none

# Sort using and Import directives with System.* appearing first
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

dotnet_style_require_accessibility_modifiers = for_non_interface_members:error
dotnet_style_readonly_field = true:error

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

file_header_template = unset

# IDE2000: Disallow multiple blank lines
dotnet_style_allow_multiple_blank_lines_experimental = false

# force file scoped namespaces
csharp_style_namespace_declarations = file_scoped:error

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with blank
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = pascal_case
dotnet_naming_style.static_field_style.required_prefix = 

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field
dotnet_naming_symbols.instance_fields.applicable_accessibilities = private, protected, internal, protected_internal, private_protected

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_diagnostic.IDE1006.severity = error

# Analyzer Configuration
# ZZ0001 Code marked with DeprecatedOnAttribute should not be used after the specified expiration date.
dotnet_diagnostic.ZZ0001.severity = suggestion
# ZZ0002 Avoid using `ExcludeFromCodeCoverageAttribute` on classes with methods, constructors, or complex properties. Either remove the attribute or add a Justification argument to explain the exclusion
dotnet_diagnostic.ZZ0002.severity = suggestion
# ZZ0003 Logging statement parameters should use PascalCase
dotnet_diagnostic.ZZ0003.severity = error
# ZZ0004 Use SuppressMessageAttribute with a justification instead of '#pragma warning' to suppress warnings or provide an explanatory comment for '#pragma warning'
dotnet_diagnostic.ZZ0004.severity = suggestion
dotnet_diagnostic.ZZ0004.scope = anywhere
# ZZ0005 Ensure the Justification field is filled in the SuppressMessage attribute
dotnet_diagnostic.ZZ0005.severity = suggestion

#CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = warning
#CA1823: Avoid unused private fields - in favor of S1144
dotnet_diagnostic.CA1823.severity = none
#CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = none
#CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = none
#CA1032:Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = suggestion
#CA2007:Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none
#CA1031:Do not catch general exception types
dotnet_diagnostic.CA1031.severity = suggestion
#CA1056:URI properties should not be strings
dotnet_diagnostic.CA1056.severity = suggestion
#CA2227:Collection properties should be read only
dotnet_diagnostic.CA2227.severity = suggestion
# CA1865-CA1867: Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char
dotnet_diagnostic.CA1865.severity = warning
dotnet_diagnostic.CA1866.severity = warning
dotnet_diagnostic.CA1867.severity = warning
# CA1869: Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1869.severity = warning
# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = warning

# CA1854: Prefer the IDictionary.TryGetValue(TKey, out TValue) method
dotnet_diagnostic.CA1854.severity = warning

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = warning

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = warning

# CA1510: Use ArgumentNullException throw helper
dotnet_diagnostic.CA1510.severity = warning

# CA1511: Use ArgumentException throw helper
dotnet_diagnostic.CA1511.severity = warning

# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.CA1826.severity = warning

# CA1512: Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1512.severity = warning

# CA1513: Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1513.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = warning

# CA1822: Make member static
dotnet_diagnostic.CA1822.severity = warning
dotnet_code_quality.CA1822.api_surface = private, internal

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = warning

# CA1304: Specify CultureInfo
# Help link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1304
dotnet_diagnostic.CA1304.severity = warning

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = warning

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = warning

# CA2016: Forward the 'CancellationToken' parameter to methods that take one
dotnet_diagnostic.CA2016.severity = warning

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = warning

# CA2249: Use string.Contains instead of string.IndexOf to improve readability.
dotnet_diagnostic.CA2249.severity = warning

# CA1311: Specify a culture or use an invariant version
# Help link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1311
dotnet_diagnostic.CA1311.severity = warning

# CA2251: Use 'string.Equals'
# Help link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2251
dotnet_diagnostic.CA2251.severity = warning

# CA1069: Enums should not have duplicate values
dotnet_diagnostic.CA1069.severity = warning

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = warning

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = warning

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = warning

# CA2250: Use ThrowIfCancellationRequested
dotnet_diagnostic.CA2250.severity = warning

# CA1868: Unnecessary call to 'Contains' for sets
dotnet_diagnostic.CA1868.severity = warning

#CA2225: Operator overloads
dotnet_diagnostic.CA2225.severity = suggestion

#CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = suggestion

#CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = none

# IDE0250: Struct can be made 'readonly' (IDE0250)
dotnet_diagnostic.IDE0250.severity = warning

# IDE0003: this and Me preferences
dotnet_diagnostic.IDE0003.severity = error

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = error

# IDE0004: Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = warning

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = warning

# IDE0082: Convert typeof to nameof
dotnet_diagnostic.IDE0082.severity = warning

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# IDE0005: Remove unnecessary usings
dotnet_diagnostic.IDE0005.severity = warning

# IDE0062: Make local function static
dotnet_diagnostic.IDE0062.severity = warning

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.IDE0161.severity = error

# IDE2000: Allow multiple blank lines
dotnet_diagnostic.IDE2000.severity = warning

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.IDE0059.severity = error

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.IDE0161.severity = error

# IDE0200: Lambda expression can be removed
dotnet_diagnostic.IDE0200.severity = error

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.IDE0043.severity = error

# Nullable directive is redundant (IDE0240)
dotnet_diagnostic.IDE0240.severity = error

# Nullable directive is unnecessary (IDE0241)
dotnet_diagnostic.IDE0241.severity = error

# IDE2000: Allow multiple blank lines
dotnet_diagnostic.IDE2000.severity = none

# RCS1194:Implement exception constructors.
dotnet_diagnostic.RCS1194.severity = suggestion

#RCS1181: Convert comment to documentation comment
dotnet_diagnostic.RCS1181.severity = none

#XML documentation rules
dotnet_diagnostic.RCS1141.severity = none
dotnet_diagnostic.RCS1142.severity = none
dotnet_diagnostic.RCS1228.severity = none

#RCS1085: Use auto-implemented property
dotnet_diagnostic.RCS1085.severity = none

#RCS1036: Remove unnecessary blank line
dotnet_diagnostic.RCS1036.severity = warning

#RCS1217: Convert interpolated string to concatenation
dotnet_diagnostic.RCS1217.severity = none

#RCS1140: Add exception to documentation comment
dotnet_diagnostic.RCS1140.severity = suggestion

#RCS1161: Enum should declare explicit values
dotnet_diagnostic.RCS1161.severity = suggestion

#RCS1241: Implement non-generic counterpart
dotnet_diagnostic.RCS1241.severity = none

#RCS1123: Add parentheses when necessary
dotnet_diagnostic.RCS1123.severity = none

#RCS1124: Inline local variable
dotnet_diagnostic.RCS1124.severity = none

#RCS1237: Use bit shift operator (deprecated)
dotnet_diagnostic.RCS1237.severity = none

#RCS1254: Normalize format of enum flag value
dotnet_diagnostic.RCS1254.severity = warning

#RCS1158: Static member in generic type should use a type parameter
dotnet_diagnostic.RCS1158.severity = none

#RCS1089: Use --/++ operator instead of assignment
dotnet_diagnostic.RCS1089.severity = suggestion

#RCS1238: Avoid nested ?: operators
dotnet_diagnostic.RCS1238.severity = suggestion

#RCS1201: Use method chaining
dotnet_diagnostic.RCS1201.severity = suggestion

#RCS1261: Resource can be disposed asynchronously
dotnet_diagnostic.RCS1261.severity = suggestion

#RCS1061: Merge 'if' with nested 'if'
dotnet_diagnostic.RCS1061.severity = suggestion

#RCS1073: Convert 'if' to 'return' statement
dotnet_diagnostic.RCS1073.severity = suggestion

#RCS1189: Add or remove region name
dotnet_diagnostic.RCS1189.severity = none

#RCS1186: Use Regex instance instead of static method
dotnet_diagnostic.RCS1186.severity = suggestion

#RCS1251: Remove unnecessary braces from record declaration
dotnet_diagnostic.RCS1251.severity = none

#RCS1102: Make class static
dotnet_diagnostic.RCS1102.severity = none

#RCS1163: Unused parameter
dotnet_diagnostic.RCS1163.severity = none

#RCS1213: Remove unused member declaration - in favor of S1144
dotnet_diagnostic.RCS1213.severity = none

#xUnit1033: Test classes decorated with 'Xunit.IClassFixture<TFixture>' should add a constructor argument of type TFixture
dotnet_diagnostic.xUnit1033.severity = none

#VSTHRD200: Use Async suffix for async methods
dotnet_diagnostic.VSTHRD200.severity = none
dotnet_analyzer_diagnostic.VSTHRD200.severity = none

#VSTHRD110: Observe result of async calls
dotnet_diagnostic.VSTHRD110.severity = error

#VSTHRD011: Use AsyncLazy<T>
dotnet_diagnostic.VSTHRD011.severity = none

#VSTHRD105:Avoid method overloads that assume TaskScheduler.Current
dotnet_diagnostic.VSTHRD105.severity = none

#VSTHRD003: Avoid awaiting foreign Tasks
dotnet_diagnostic.VSTHRD003.severity = suggestion

# Sonar --------------------------------------------------

# S3626 Jump statements should not be redundant
dotnet_diagnostic.S3626.severity = none

# S125: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = suggestion

# S2094: Classes should not be empty
dotnet_diagnostic.S2094.severity = none

# Unnecessary bit operations should not be performed
dotnet_diagnostic.S2437.severity = warning

#S4792: Make sure that this logger's configuration is safe.
dotnet_diagnostic.S4792.severity = none

# S1135: Complete the task associated to this 'TODO' comment.
dotnet_diagnostic.S1135.severity = none

# S1133: Deprecated code should be removed
dotnet_diagnostic.S1133.severity = suggestion

# S3267: Loops should be simplified with "LINQ" expressions
dotnet_diagnostic.S3267.severity = none

# S101: Types should be named in PascalCase
dotnet_diagnostic.S101.severity = none

# S1694: An abstract class should have both abstract and concrete methods
dotnet_diagnostic.S1694.severity = none

# S1264: A "while" loop should be used instead of a "for" loop
dotnet_diagnostic.S1264.severity = none

# S6960: Controllers should not have mixed responsibilities
dotnet_diagnostic.S6960.severity = suggestion

# S6608: Prefer indexing instead of "Enumerable" methods on types implementing "IList"
dotnet_diagnostic.S6608.severity = suggestion

# S2325: Methods and properties that don't access instance data should be static - In favor of CA1822
dotnet_diagnostic.S2325.severity = none

# S3218: Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3218.severity = none

# S2344: Enumeration type names should not have "Flags" or "Enum" suffixes
dotnet_diagnostic.S2344.severity = suggestion

[**/{*.Tests,*.Tests.Common,*.Tests.Shared,*.Tests.Base}/**.cs]
dotnet_diagnostic.VSTHRD200.severity = none
dotnet_analyzer_diagnostic.VSTHRD200.severity = none
dotnet_diagnostic.FAA0001.severity = none
dotnet_diagnostic.S3236.severity = none
dotnet_diagnostic.S2344.severity = none
dotnet_diagnostic.S3887.severity = none
dotnet_diagnostic.S3963.severity = none
dotnet_diagnostic.S1118.severity = none
dotnet_diagnostic.S3878.severity = none
resharper_explicit_caller_info_argument_highlighting = none